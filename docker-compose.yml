services:
  nginx:
    image: nginx:alpine
    container_name: pong-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/sites:/etc/nginx/sites-enabled
      - ./data/frontend:/var/www/html
    depends_on:
      - backend
      - frontend
    networks:
      - pong-network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pong-backend
    env_file:
      - .env
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/db:/app/db
    networks:
      - pong-network
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pong-frontend
    volumes:
      - ./data/frontend:/app/output
    networks:
      - pong-network
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    container_name: pong-prometheus
    env_file:
      - .env
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - pong-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: pong-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
    env_file:
      - .env
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
    networks:
      - pong-network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: pong-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - pong-network
    restart: unless-stopped

networks:
  pong-network:
    driver: bridge