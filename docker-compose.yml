services:
  nginx:
    image: nginx:alpine
    container_name: pong-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/sites:/etc/nginx/sites-enabled
      - ./data/frontend:/var/www/html
    depends_on:
      - backend
      - frontend
    networks:
      - pong-network
    restart: unless-stopped

  # Backend Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pong-backend
    env_file:
      - ./backend/.env
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/db:/app/db
    networks:
      - pong-network
    restart: unless-stopped

  # Frontend Build Service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pong-frontend
    volumes:
      - ./data/frontend:/app/output
    networks:
      - pong-network
    restart: "no"

  # # Prometheus Monitoring
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: pong-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./data/prometheus:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   networks:
  #     - pong-network
  #   restart: unless-stopped

  # # Grafana Monitoring
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: pong-grafana
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #     - MONITORING_URL=${MONITORING_URL:-http://prometheus:9090}
  #   volumes:
  #     - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  #     - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
  #     - ./data/grafana:/var/lib/grafana
  #   networks:
  #     - pong-network
  #   restart: unless-stopped

networks:
  pong-network:
    driver: bridge