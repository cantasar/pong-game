services:
  # Backend Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: pong-backend
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    volumes:
      - ./data/uploads:/app/uploads
      - ./data/db:/app/db
    networks:
      - pong-network
    restart: unless-stopped

  # Frontend Build Service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - API_BASE_URL=https://pong.cant.tr
        - API_WS_URL=wss://pong.cant.tr/ws
    container_name: pong-frontend
    volumes:
      - /var/www/html/pong-game:/app/output
    networks:
      - pong-network
    restart: "no"

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: pong-prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=https://pong.cant.tr/prometheus'
      - '--web.route-prefix=/prometheus'
    networks:
      - pong-network
    restart: unless-stopped

  # Grafana Monitoring  
  grafana:
    image: grafana/grafana:latest
    container_name: pong-grafana
    ports:
      - "127.0.0.1:3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=https://pong.cant.tr/monitoring
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./data/grafana:/var/lib/grafana
    networks:
      - pong-network
    restart: unless-stopped
    user: "472:472"

networks:
  pong-network:
    driver: bridge